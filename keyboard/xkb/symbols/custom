// Custom layout by GuiltyDolphin.
// Similar to Programmer Dvorak but has an additional escape key,
// uses right-alt as shift and has a holding left-alt brings
// the symbol/number row down to the home row.
default partial alphanumeric_keys modifier_keys
xkb_symbols "basic" {

  name[Group1]= "Caps->Ctrl, LSGT->Escape";
  name[Group2]= "symbol_home_row";

  // Currently has dependencies on programmer dvorak
  include "custom(us_dvp)"

    key <LSGT> { [ Escape, Escape ] };  // Handy little key for escape
  // replace key <CAPS>  { [ Control_L, Control_L ] };
  // modifier_map  Control { <CAPS>, <LCTL> };

  key <LALT> {
    [Mode_switch, NoSymbol]
  };
  key <RALT> {
    [Shift_L, Shift_L]
  };
  // Home row
  key <AC01> {
    [ a, A ],
      [ bracketleft, 7 ]
  };

  key <AC02> {
    [ o, O ],
      [ braceleft, 5 ]
  };

  key <AC03> {
    [ e, E ],
      [ braceright, 3 ]
  };

  key <AC04> {
    [ u, U ],
      [ parenleft, 1 ]
  };

  key <AC05> {
    [ i, I ],
      [ equal, 9 ]
  };

  key <AC06> {
    [ d, D ],
      [ asterisk, 0 ]
  };

  key <AC07> {
    [ h, H ],
      [ parenright, 2 ]
  };

  key <AC08> {
    [ t, T ],
      [ plus, 4 ]
  };

  key <AC09> {
    [ n, N ],
      [ bracketright, 6 ]
  };

  key <AC10> {
    [ s, S ],
      [ exclam, 8 ]
  };

};

// Emacs and Vi friendly keyboard layout by GuiltyDolphin.
// Main features:
//  - Capslock is now a CTRL key.
//  - The LSGT key (bar in bottom left) becomes an escape key.
//  - The right-alt key becomes a shift key.
//  - Uses Programmer Dvorak as a base.
partial alphanumeric_keys modifier_keys
xkb_symbols "emacs" {

  name[Group1]= "Caps->Ctrl, LSGT->Escape";
  name[Group2]= "symbol_home_row";

  // Currently has dependencies on programmer dvorak
  include "custom(us_dvp)"

    key <LSGT> { [ Escape, Escape ] };
  // replace key <CAPS>  { [ Control_L, Control_L ] };
  // modifier_map  Control { <CAPS>, <LCTL> };

  key <RALT> {
    [Shift_L, Shift_L]
  };
};

// Modified US keyboard layout by GuiltyDolphin.
// Main features:
//  - Capslock is now a CTRL key.
//  - The LSGT key (bar in bottom left) becomes an escape key.
//  - The right-alt key becomes a shift key.
//  - Uses United States layout for base
partial alphanumeric_keys modifier_keys
xkb_symbols "custom_us" {

  name[Group1]= "Caps->Ctrl, LSGT->Escape";
  name[Group2]= "symbol_home_row";

  // Currently has dependencies on programmer dvorak
  include "custom(us_qwert)"

    key <LSGT> { [ Escape, Escape ] };
  // replace key <CAPS>  { [ Control_L, Control_L ] };
  // modifier_map  Control { <CAPS>, <LCTL> };

  key <RALT> {
    [Shift_L, Shift_L]
  };
};


// // // //
// The following keymaps are made by other people.
// They are included to ensure that the above keymaps work.
// // // //

// based on a keyboard map from an 'xkb/symbols/dk' file

partial alphanumeric_keys
xkb_symbols "us_dvorak" {

    name[Group1]= "English (Dvorak)";

    key <TLDE> { [       grave,	asciitilde, dead_grave, dead_tilde	] };

    key <AE01> { [	    1,	exclam 		]	};
    key <AE02> { [	    2,	at		]	};
    key <AE03> { [	    3,	numbersign	]	};
    key <AE04> { [	    4,	dollar		]	};
    key <AE05> { [	    5,	percent		]	};
    key <AE06> { [	    6,	asciicircum, dead_circumflex, dead_circumflex ]	};
    key <AE07> { [	    7,	ampersand	]	};
    key <AE08> { [	    8,	asterisk	]	};
    key <AE09> { [	    9,	parenleft,  dead_grave]	};
    key <AE10> { [	    0,	parenright	]	};
    key <AE11> { [ bracketleft,	braceleft	]	};
    key <AE12> { [ bracketright, braceright,  dead_tilde] };

    key <AD01> { [  apostrophe,	quotedbl, dead_acute, dead_diaeresis	] };
    key <AD02> { [	comma,	less,   dead_cedilla, dead_caron	] };
    key <AD03> { [      period,	greater, dead_abovedot, periodcentered	] };
    key <AD04> { [	    p,	P		]	};
    key <AD05> { [	    y,	Y		]	};
    key <AD06> { [	    f,	F		]	};
    key <AD07> { [	    g,	G		]	};
    key <AD08> { [	    c,	C		]	};
    key <AD09> { [	    r,	R		]	};
    key <AD10> { [	    l,	L		]	};
    key <AD11> { [	slash,	question	]	};
    key <AD12> { [	equal,	plus		]	};

    key <AC01> { [	    a,	A 		]	};
    key <AC02> { [	    o,	O		]	};
    key <AC03> { [	    e,	E		]	};
    key <AC04> { [	    u,	U		]	};
    key <AC05> { [	    i,	I		]	};
    key <AC06> { [	    d,	D		]	};
    key <AC07> { [	    h,	H		]	};
    key <AC08> { [	    t,	T		]	};
    key <AC09> { [	    n,	N		]	};
    key <AC10> { [	    s,	S		]	};
    key <AC11> { [	minus,	underscore	]	};

    key <AB01> { [   semicolon,	colon, dead_ogonek, dead_doubleacute ] };
    key <AB02> { [	    q,	Q		]	};
    key <AB03> { [	    j,	J		]	};
    key <AB04> { [	    k,	K		]	};
    key <AB05> { [	    x,	X		]	};
    key <AB06> { [	    b,	B		]	};
    key <AB07> { [	    m,	M		]	};
    key <AB08> { [	    w,	W		]	};
    key <AB09> { [	    v,	V		]	};
    key <AB10> { [	    z,	Z		]	};

    key <BKSL> { [  backslash,  bar             ]       };
};

// Programmer Dvorak, by Roland Kaufmann <rlndkfmn at gmail dot com>
// License: BSD, available at <http://www.kaufmann.no/roland/dvorak/license.html>
// Main features: Numbers are in shift position (like French), symbols have been
// placed in locations that give good hand-alternation and finger rolling with
// symbols that usually follows, accented characters are possible for I18N.
partial alphanumeric_keys
xkb_symbols "us_dvp" {
    include "custom(us_dvorak)"
    //include "custom(ctrl_nocaps)"

    name[Group1] = "English (programmer Dvorak)";

    //             Unmodified       Shift           AltGr            Shift+AltGr
    // symbols row, left side
    key <TLDE> { [ dollar,          asciitilde,     dead_tilde                  ] };
    key <AE01> { [ ampersand,       percent                                     ] };
    key <AE02> { [ bracketleft,     7,              currency                    ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };
    key <AE03> { [ braceleft,       5,              cent                        ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };
    key <AE04> { [ braceright,      3,              yen                         ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };
    key <AE05> { [ parenleft,       1,              EuroSign                    ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };
    key <AE06> { [ equal,           9,              sterling                    ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };

    // symbols row, right side
    key <AE07> { [ asterisk,        0                                           ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };
    key <AE08> { [ parenright,      2,              onehalf                     ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };
    key <AE09> { [ plus,            4                                           ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };
    key <AE10> { [ bracketright,    6                                           ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };
    key <AE11> { [ exclam,          8,              exclamdown                  ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };
    key <AE12> { [ numbersign,      grave,          dead_grave                  ] };
    key <BKSP> { [ BackSpace,       BackSpace                                   ] };

    // upper row, left side
    key <AD01> { [ semicolon,       colon,          dead_diaeresis              ] };
    key <AD02> { [ comma,           less,           guillemotleft               ] };
    key <AD03> { [ period,          greater,        guillemotright              ] };
    key <AD04> { [ p,               P,              paragraph,       section    ] };
    key <AD05> { [ y,               Y,              udiaeresis,      Udiaeresis ] };

    // upper row, right side
    key <AD08> { [ c,               C,              ccedilla,        Ccedilla   ] };
    key <AD09> { [ r,               R,              registered,      trademark  ] };
    key <AD11> { [ slash,           question,       questiondown                ] };
    key <AD12> { [ at,              asciicircum,    dead_circumflex, dead_caron ] };

    // home row, left side
    key <AC01> { [ a,               A,              aring,           Aring      ] };
    key <AC02> { [ o,               O,              oslash,          Ooblique   ] };
    key <AC03> { [ e,               E,              ae,              AE         ] };
    key <AC04> { [ u,               U,              eacute,          Eacute     ] };

    // home row, right side
    key <AC06> { [ d,               D,              eth,             ETH        ] };
    key <AC07> { [ h,               H,              dead_acute                  ] };
    key <AC08> { [ t,               T,              thorn,           THORN      ] };
    key <AC09> { [ n,               N,              ntilde,          Ntilde     ] };
    key <AC10> { [ s,               S,              ssharp                      ] };
    key <AC11> { [ minus,           underscore,     hyphen                      ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };
    key <BKSL> { [ backslash,       bar                                         ] };

    // lower row, left side
    key <AB01> { [ apostrophe,      quotedbl,       dead_acute                  ] };
   // key <LSGT> { [ Escape,               Escape ] };
   // key.type = "ONE LEVEL";
   // key <CAPS> { [ Escape ] };
    include "custom(level3_ralt_switch)"
    //include "custom(ctrl_nocaps)"
};


// these variants assign various XKB keycodes to ISO_Level3_Shift so that
// the third shift level can be reached
//

// the default behavior is for the right Alt key (AltGr) to generate the
// third engraved symbol
partial modifier_keys
xkb_symbols "level3_ralt_switch" {
  key <RALT> {
    type[Group1]="ONE_LEVEL",
    symbols[Group1] = [ ISO_Level3_Shift ]
    };
  modifier_map Mod5   { ISO_Level3_Shift };
};


// Eliminate CapsLock, making it another Ctrl.
partial modifier_keys
xkb_symbols "ctrl_nocaps" {
    replace key <CAPS>	{ [ Control_L, Control_L ] };
    modifier_map  Control { <CAPS>, <LCTL> };
};


// Basic US keyboard layout.
partial alphanumeric_keys modifier_keys
xkb_symbols "us_qwert" {

    name[Group1]= "English (US)";

    key <TLDE> {	[     grave,	asciitilde	]	};
    key <AE01> {	[	  1,	exclam 		]	};
    key <AE02> {	[	  2,	at		]	};
    key <AE03> {	[	  3,	numbersign	]	};
    key <AE04> {	[	  4,	dollar		]	};
    key <AE05> {	[	  5,	percent		]	};
    key <AE06> {	[	  6,	asciicircum	]	};
    key <AE07> {	[	  7,	ampersand	]	};
    key <AE08> {	[	  8,	asterisk	]	};
    key <AE09> {	[	  9,	parenleft	]	};
    key <AE10> {	[	  0,	parenright	]	};
    key <AE11> {	[     minus,	underscore	]	};
    key <AE12> {	[     equal,	plus		]	};

    key <AD01> {	[	  q,	Q 		]	};
    key <AD02> {	[	  w,	W		]	};
    key <AD03> {	[	  e,	E		]	};
    key <AD04> {	[	  r,	R		]	};
    key <AD05> {	[	  t,	T		]	};
    key <AD06> {	[	  y,	Y		]	};
    key <AD07> {	[	  u,	U		]	};
    key <AD08> {	[	  i,	I		]	};
    key <AD09> {	[	  o,	O		]	};
    key <AD10> {	[	  p,	P		]	};
    key <AD11> {	[ bracketleft,	braceleft	]	};
    key <AD12> {	[ bracketright,	braceright	]	};

    key <AC01> {	[	  a,	A 		]	};
    key <AC02> {	[	  s,	S		]	};
    key <AC03> {	[	  d,	D		]	};
    key <AC04> {	[	  f,	F		]	};
    key <AC05> {	[	  g,	G		]	};
    key <AC06> {	[	  h,	H		]	};
    key <AC07> {	[	  j,	J		]	};
    key <AC08> {	[	  k,	K		]	};
    key <AC09> {	[	  l,	L		]	};
    key <AC10> {	[ semicolon,	colon		]	};
    key <AC11> {	[ apostrophe,	quotedbl	]	};

    key <AB01> {	[	  z,	Z 		]	};
    key <AB02> {	[	  x,	X		]	};
    key <AB03> {	[	  c,	C		]	};
    key <AB04> {	[	  v,	V		]	};
    key <AB05> {	[	  b,	B		]	};
    key <AB06> {	[	  n,	N		]	};
    key <AB07> {	[	  m,	M		]	};
    key <AB08> {	[     comma,	less		]	};
    key <AB09> {	[    period,	greater		]	};
    key <AB10> {	[     slash,	question	]	};

    key <BKSL> {	[ backslash,         bar	]	};
};
